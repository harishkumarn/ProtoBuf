syntax = "proto3";

option java_package = "com.harish.proto";
option java_multiple_files = true;
//option java_outer_classname = "EmployeeBuilder";

message Developer{
	repeated string techSkills = 1;
}

message QA{
	enum Type {
		MANUAL = 0;// default skill
		AUTOMATION = 1;
	}

	Type skill = 1;
}


message PM{
	repeated string skills = 1;
}

message Employee{

	string name = 1;
	int32 age = 2;
	string role = 4;
	string dob = 5;
	
	oneof skills  {
		Developer dev = 6;
		QA qa = 7;
		PM pm = 8;
	}

}



/*
There is not null type in protocol buffer, so eash data type has its own default value

string ""
int32,int64,float,double 0
boolean false
repeatable an empty list
map an empty map
enum oridinal 0 value

Proto can have packages and we can import other schema inside a proto file


Tokens :  Protobuf takes so minimal size because of tokens, 
		  at the backend the fields are stored based on their token values
		  1 - 15 takes 1 Byte
		  16 to 2047 takes 2 Bytes
		  19000 to 19999 is reserved for internal usage
		  changing token of existing schema is not recommended
		  2^99 -1 tokens can be used


Primitive types have default values and Composite types have hasField method
In order to achieve this on primitive types, protobuf has intorduced wrapper classes for all Primitive types 
the package "google/protobuf/wrappers.proto" has wrapper for all primitive types , Ex : Int32Value, Int64Value etc.,

*/